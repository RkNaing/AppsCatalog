# Android
# Build your Android project with Gradle.
# Add steps that test, sign, and distribute the APK, save build artifacts, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/android

trigger:
- master

pool:
  vmImage: 'macos-latest'

steps:
- task: JavaToolInstaller@0
  inputs:
    versionSpec: '17'
    jdkArchitectureOption: 'x64'
    jdkSourceOption: 'PreInstalled'
  displayName: 'Setup to use JDK 17.'
- task: Gradle@2
  inputs:
    workingDirectory: ''
    gradleWrapperFile: 'gradlew'
    gradleOptions: '-Xmx3072m'
    publishJUnitResults: true
    testResultsFiles: '**/TEST-*.xml'
    tasks: 'clean build assemble'
  displayName: 'Build (Compilation Check)'
- task: Gradle@2
  inputs:
    workingDirectory: ''
    gradleWrapperFile: 'gradlew'
    gradleOptions: '-Xmx3072m'
    publishJUnitResults: true
    testResultsFiles: '**/build/reports/detekt/detekt.html'
    tasks: 'detekt'
    options: '--build-cache'
  displayName: 'Check code quality (Detekt).'
- task: Gradle@2
  inputs:
    gradleWrapperFile: 'gradlew'
    tasks: 'pixel2Api34DevDebugAndroidTest'
    gradleOptions: '-Xmx3072m'
    publishJUnitResults: false
    testResultsFiles: '**/TEST-*.xml'
    options: '--build-cache -Pandroid.sdk.channel=3 -Pandroid.testoptions.manageddevices.emulator.gpu=swiftshader_indirect'
    displayName: 'UI Tests'
- task: Gradle@3
  inputs:
    gradleWrapperFile: 'gradlew'
    tasks: 'checkDebugAll'
    gradleOptions: '-Xmx3072m'
    publishJUnitResults: false
    testResultsFiles: '**/TEST-*.xml'
    options: '--build-cache'
  displayName: 'Gradle Check'
# Android
# Build your Android project with Gradle.
# Add steps that test, sign, and distribute the APK, save build artifacts, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/android

trigger:
- master

pool:
  vmImage: 'macos-latest'

steps:
- task: JavaToolInstaller@0
  inputs:
    versionSpec: '17'
    jdkArchitectureOption: 'x64'
    jdkSourceOption: 'PreInstalled'
  displayName: 'Setup to use JDK 17.'
- task: Gradle@2
  inputs:
    workingDirectory: ''
    gradleWrapperFile: 'gradlew'
    gradleOptions: '-Xmx3072m'
    publishJUnitResults: true
    testResultsFiles: '**/TEST-*.xml'
    tasks: 'clean build assemble'
  displayName: 'Build (Compilation Check)'
- task: Gradle@2
  inputs:
    workingDirectory: ''
    gradleWrapperFile: 'gradlew'
    gradleOptions: '-Xmx3072m'
    publishJUnitResults: true
    testResultsFiles: '**/build/reports/detekt/detekt.html'
    tasks: 'detekt'
    options: '--build-cache'
  displayName: 'Check code quality (Detekt).'
- script: |
    #!/usr/bin/env bash
    # Install AVD files
    echo "y" | $ANDROID_HOME/cmdline-tools/latest/bin/sdkmanager --install 'system-images;android-33;google_apis;arm64-v8a'
    # Create emulator
    echo "no" | $ANDROID_HOME/tools/bin/avdmanager create avd -n xamarin_android_emulator -k 'system-images;android-33;google_apis;arm64-v8a' --force
    $ANDROID_HOME/emulator/emulator -list-avds
    echo "Starting emulator"
    # Start emulator in background
    nohup $ANDROID_HOME/emulator/emulator -avd xamarin_android_emulator -no-snapshot -no-audio -no-boot-anim > /dev/null 2>&1 &
    $ANDROID_HOME/platform-tools/adb wait-for-device shell 'while [[ -z $(getprop sys.boot_completed | tr -d '\r') ]]; do sleep 1; done; input keyevent 82'
    $ANDROID_HOME/platform-tools/adb devices
    echo "Emulator started"
  displayName: 'Setup Emulator'
- task: Gradle@2
  inputs:
    gradleWrapperFile: 'gradlew'
    tasks: 'connectedAndroidTest'
    gradleOptions: '-Xmx3072m'
    publishJUnitResults: false
    testResultsFiles: '**/TEST-*.xml'
    options: '--build-cache -Pandroid.sdk.channel=3 -Pandroid.testoptions.manageddevices.emulator.gpu=swiftshader_indirect'
    displayName: 'UI Tests'
- task: Gradle@3
  inputs:
    gradleWrapperFile: 'gradlew'
    tasks: 'checkDebugAll'
    gradleOptions: '-Xmx3072m'
    publishJUnitResults: false
    testResultsFiles: '**/TEST-*.xml'
    options: '--build-cache'
  displayName: 'Gradle Check'